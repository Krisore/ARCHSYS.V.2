@inherits LayoutComponentBase
@inject IDialogService DialogService
<MudThemeProvider Theme="MyCustomTheme" @bind-IsDarkMode="IsDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Dense="true">
        <MudSpacer/>
        <MudButton Size="Size.Small" OnClick="@((e) => BeginUpload(UploadDocumentDialog))" StartIcon="@Icons.Material.Filled.Add" Class="rounded-0 mx-2" Variant="Variant.Outlined" Disabled="false" DisableElevation="true">
            UPLOAD
        </MudButton>
        <MudIconButton Size="Size.Small" Icon="@Icons.Material.Filled.MoreVert" />
        <MudToggleIconButton @bind-Toggled="@IsDarkMode"
                             Icon="@Icons.Sharp.DarkMode"
                             Color="Color.Dark"
                             Title="Go to Dark Mode"
                             ToggledIcon="@Icons.Sharp.LightMode"
                             ToggledColor="@Color.Success"
                             Edge="Edge.End"
                             Size="Size.Small"
                             ToggledSize="Size.Small"/>
    </MudAppBar>
    <MudDrawer PreserveOpenState="true" @bind-Open="@IsDrawerOpen" ClipMode="DrawerClipMode.Always" Elevation="1">
        <div class="my-2 mx-4">
            <ArchivistNavMenu />
        </div>
    </MudDrawer>
    <MudMainContent Class="my-14">
        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
            @Body
        </MudContainer>
    </MudMainContent>
    <MudScrollToTop>
        <MudFab Color="Color.Secondary" Icon="@Icons.Filled.KeyboardArrowUp" Size="Size.Small" />
    </MudScrollToTop>
</MudLayout>

@code {
    public bool IsDrawerOpen { get; set; } = true;
    public bool IsDarkMode { get; set; }
    private DialogOptions UploadDocumentDialog = new DialogOptions()
    {
        Position = DialogPosition.Center,
        MaxWidth = MaxWidth.ExtraExtraLarge,
        CloseButton = true,
        NoHeader = false,
        DisableBackdropClick = false,
    };

    MudTheme MyCustomTheme = new MudTheme()
    {
            Palette = new Palette()
            {
                Primary = Colors.Red.Darken4,
                Secondary = Colors.Yellow.Accent4,
                AppbarBackground = Colors.Shades.White,
            },
            PaletteDark = new PaletteDark()
            {
                Primary = Colors.Blue.Lighten1
            },

            LayoutProperties = new LayoutProperties()
            {
                DrawerWidthLeft = "260px",
                DrawerWidthRight = "350px",
                DrawerMiniWidthLeft = "78px"
            },
            Typography = new Typography()
            {
                Default = new Default()
                {
                    FontFamily = new[] { "Poppins", "Helvetica", "Arial", "sans-serif" }
                }
            }

    };
    private void BeginUpload(DialogOptions options) => DialogService.Show<UploadDocument>("Upload Document 🚀", options);
}
